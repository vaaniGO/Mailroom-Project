<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ashoka University Mailroom</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/css/global-styles.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet">
</head>

<body>

    <%-include("partials/navbar.ejs")-%>


        <!-- Login Box -->
        <div class="login-container">
            <div class="login-box" id="loginBox">
                <h3 class="mb-4">Find User</h3>

                <p>Name, Email ID or Ashoka ID</p>
                <div class="input-group mb-3 dropdown" style="position: relative;">
                    <input name="student" type="text" id="userInput" class="form-control" placeholder="Enter details"
                        autofocus autocomplete="off">
                    <span onclick="clearStudent()"
                        style="color:#C4122F; border-top-right-radius: 8px; border-bottom-right-radius: 8px;"
                        class="input-group-text" id="basic-addon2">Clear</span>



                    <!-- Hidden input to store selected student -->
                    <input name="hiddenSelectedStudent" type="hidden" id="hiddenSelectedStudent" class="form-control"
                        autocomplete="off">


                    <!-- Dropdown results -->
                    <ul id="searchResults" class="dropdown-menu"></ul>
                </div>

                <div class="d-flex justify-content-between">
                    <button id="no-student" class="btn btn-danger next-btn" onclick="useTrackingID()">
                        NO USER FOUND
                    </button>
                    <button id="student-next" disabled class="btn btn-danger next-btn"
                        onclick="enterPackageDetails(document.getElementById('hiddenSelectedStudent').value.split(',')[0],document.getElementById('hiddenSelectedStudent').value.split(',')[1],document.getElementById('hiddenSelectedStudent').value.split(',')[2])">
                        NEXT
                    </button>
                    
                </div>
            </div>
        </div>

        <div class="login-container tracking-id-login">
            <div class="login-box" id="trackingIDLoginBox" style="display: none;">
                <h3 class="mb-4">Package Details</h3>
                <div class="input-group mb-3 dropdown">
                    <input type="text" id="trackingIDInput" class="form-control" placeholder="Enter Tracking ID"
                        style="border-radius: 7px;" autocomplete="off">
                </div>
                <div class="input-group">                
                    <select id="deliverySelect" name="deliveryService" style="
                        width: 100%;
                        font-size: 17px;
                        padding: 6px;
                        border-radius: 8px;
                        background-color: #f8f9fa;
                        cursor: pointer;
                    ">
                        <option value="" disabled selected>Select Delivery service</option>
                        <option value="FedEx">FedEx</option>
                        <option value="DHL">DHL</option>
                        <option value="UPS">UPS</option>
                        <option value="USPS">USPS</option>
                        <option value="Amazon Delivery">Amazon Delivery</option>
                        <option value="Amazon Delivery">Other</option>
                    </select>
                    
                </div>
                <input type="checkbox" id="postPackageInput" class="form-control" placeholder="Post"
                        style="border-radius: 7px;" autocomplete="off">
                <input type="checkbox" id="groundPackageInput" class="form-control" placeholder="Ground"
                style="border-radius: 7px;" autocomplete="off">
                <input type="checkbox" id="otpPendingInput" class="form-control" placeholder="OTP Pending"
                        style="border-radius: 7px;" autocomplete="off">
                <br />

                <div class="d-flex justify-content-end">
                    <button id="student-next" class="btn btn-danger next-btn" onclick="insertPackageData(false, document.getElementById('trackingIDInput').value.trim(), document.getElementById('deliverySelect').value)">SUBMIT</button>
                </div>
            </div>
        </div>

        <div class="login-container">
            <div class="login-box" id="enterPackageDetails" style="display: none;">
                <div class="packageAssociatedDetails" id="packageAssociatedDetails">
                </div>
                <div class="container">
                </div>

                <div class="d-flex justify-content-between mt-3">
                    <button class="btn btn-danger next-btn" onclick="goBackToEnterPackage()">BACK</button>
                </div>
            </div>
        </div>
        <br />

        <script>
            // Get the current date in a readable format (DD-MM-YYYY)
            const currentDate = new Date();
            let packageNo = 1;
            const formattedDate = currentDate.getDate().toString().padStart(2, '0') + "-" +
                (currentDate.getMonth() + 1).toString().padStart(2, '0') + "-" +
                currentDate.getFullYear();
            document.getElementById("date").innerText = formattedDate;

            const formattedTime = currentDate.getHours().toString().padStart(2, '0') + ":" +
                currentDate.getMinutes().toString().padStart(2, '0');
            document.getElementById("time").innerText = formattedTime;

            const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            document.getElementById("day").innerText = days[currentDate.getDay()];


            function useTrackingID() {
                document.getElementById('loginBox').style = "display: none;"
                document.getElementById('trackingIDLoginBox').style = "display: block;"
            }

            function clearStudent() {
                document.getElementById('userInput').value = "";
                document.getElementById('hiddenSelectedStudent').value = "";
                document.getElementById("student-next").disabled = true;
                document.getElementById("no-student").disabled = false;
            }

            function showStudentDetails() {
                document.getElementById('DetailBox').style = "display: block;"
            }

            function enterPackageDetails(studentName, studentEmail, studentID) {
                document.getElementById('loginBox').style = "display: none;"
                document.getElementById('packageAssociatedDetails').innerHTML = `
            <h3 class="mb-4">Package Details</h3>
            <div class="input-group">                
                <select id="deliverySelectTrackingID" name="deliveryService" style="
                    width: 100%;
                    font-size: 17px;
                    padding: 6px;
                    border-radius: 8px;
                    background-color: #f8f9fa;
                    cursor: pointer;
                ">
                    <option value="" disabled selected>Select Delivery service</option>
                    <option value="FedEx">FedEx</option>
                    <option value="DHL">DHL</option>
                    <option value="UPS">UPS</option>
                    <option value="USPS">USPS</option>
                    <option value="Amazon Delivery">Amazon Delivery</option>
                    <option value="Amazon Delivery">Other</option>
                </select>
                
            </div>

            <div class="remarksInput mt-3">
            <div class="remarksInput-input">
            <input type="checkbox" id="postPackageInput" class="form-check-input" placeholder="Post"
                        style="border-radius: 7px;" autocomplete="off">
            <label for="postPackageInput" class="form-check-label">Post</label>
            </div>
            <div class="remarksInput-input">
            <input type="checkbox" id="groundPackageInput" class="form-check-input" placeholder="Ground"
                style="border-radius: 7px;" autocomplete="off">
                <label for="groundPackageInput" class="form-check-label">Ground</label>
            </div>
            <div class="remarksInput-input">
            <input type="checkbox" id="otpPendingInput" class="form-check-input"" placeholder="OTP Pending"
                        style="border-radius: 7px;" autocomplete="off">
                        <label for="otpPendingInput" class="form-check-label">OTP Pending</label>
            </div>
            </div>

            <br />
            <hr size="50" style="height:20px;color:white" >
            <input style="background-color:rgb(220,220,220);font-weight:700" disabled type="text" class="form-control mb-3" placeholder="${studentName}">
            <input style="background-color:rgb(220,220,220);font-weight:700;" disabled type="text" class="form-control mb-3" placeholder="${studentEmail}">
            <input style="background-color:rgb(220,220,220);font-weight:700;" disabled type="text" class="form-control mb-3" placeholder="${studentID}">
            <button id="student-next" class="btn btn-danger next-btn" 
                onclick="insertPackageData(
                    true, 
                    document.getElementById('hiddenSelectedStudent').value.split(',')[2], 
                    document.getElementById('deliverySelectTrackingID').value,
                    document.getElementById('postPackageInput').checked,
                    document.getElementById('groundPackageInput').checked,
                    document.getElementById('otpPendingInput').checked
                )">
                SUBMIT
            </button>
            </div>
            `;
                document.getElementById('enterPackageDetails').style = "display: block;"
            }

            function goBackToEnterPackage() {
                document.getElementById('loginBox').style = "display: block;"
                document.getElementById('enterPackageDetails').style = "display: none;"
            }

            function selectService(service) {
                document.getElementById("deliveryInput").value = service;
                // Hide dropdown after selection
                const dropdownMenu = document.getElementById('serviceDropdown');
                const bsDropdown = bootstrap.Dropdown.getInstance(document.getElementById('deliveryDropdown'));
                if (bsDropdown) {
                    bsDropdown.hide();
                }
            }

            // Move `selectStudent` Outside to Make It Globally Accessible
            function selectStudent(name, email, id) {
                document.getElementById("userInput").value = `${name} (${id})`;
                document.getElementById("hiddenSelectedStudent").value = `${name},${email},${id}`;
                document.getElementById("student-next").disabled = false;
                document.getElementById("no-student").disabled = true;
                document.getElementById("searchResults").classList.remove("show");
            }

            async function insertPackageData(identified, ID, deliveryPartner, post, ground, otp_pending) {
                // Default values
                const shelfNo = "abc"; // Shelf number is constant
                const status = "pending"; // Default status
                const timestamp = new Date().toISOString(); // Current timestamp in ISO format

                // Determine ashokaID or trackingID based on the identified flag
                const ashokaID = identified ? ID : null;
                const trackingID = !identified ? ID : null;
                console.log(ashokaID);
                console.log(trackingID);
                console.log(deliveryPartner);

                try {
                    // Step 2: Insert package data into the database
                    const response = await fetch('/insertpackage', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            ashokaID,
                            trackingID,
                            packageNo, 
                            shelfNo,
                            timestamp,
                            deliveryPartner,
                            status,
                            post,
                            ground, 
                            otp_pending
                        })
                    });

                    if (response.ok) {
                        // If the package is successfully inserted, increment the package number
                        alert("Package details inserted successfully!");
                        const queryString = new URLSearchParams({
                            packageNo: JSON.stringify(packageNo),
                            shelfNo: JSON.stringify(shelfNo),
                            timestamp: JSON.stringify(timestamp)
                        }).toString();
                        console.log('here');
                        window.location.href = `/success-log?packageDetails=${queryString}`;
                        packageNo++;  // Increment the package number for the next package
                    } else {
                        alert("Failed to insert package details.");
                    }
                } catch (error) {
                    console.error("Error inserting package data:", error);
                    alert("An error occurred while inserting package data.");
                }
            }



        </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const searchInput = document.getElementById("userInput");
                const resultsDropdown = document.getElementById("searchResults");
                let debounceTimer;
                let cachedResults = []; // Cache to prevent unnecessary API calls

                function fetchResults(query) {
                    clearTimeout(debounceTimer);
                    debounceTimer = setTimeout(async () => {
                        try {
                            const response = await fetch(`http://127.0.0.1:3000/search2?q=${encodeURIComponent(query)}`);
                            const data = await response.json();
                            cachedResults = data; // Store results in cache
                            displayResults(cachedResults);
                        } catch (error) {
                            console.error("Error fetching search results:", error);
                        }
                    }, 500);
                }

                function displayResults(results) {
                    results = results.data;
                    if (results.length > 0) {
                        // Filter out objects that are missing required fields
                        const validResults = results.filter(result =>
                            result.UserName && result.AshokaEmailId && result.AshokaId
                        );
                        // console.log(validResults);
                        if (validResults.length > 0) {
                            resultsDropdown.innerHTML = validResults.map(result => `
            <li class="dropdown-item" onclick="selectStudent('${result.UserName.toUpperCase()}', '${result.AshokaEmailId}', '${result.AshokaId}')">
                <strong>${result.UserName.toUpperCase()}</strong>
                <span style="float:right;">ID: ${result.AshokaId}</span> <br>
                <small>${result.AshokaEmailId}</small>
            </li>
        `).join("");

                            resultsDropdown.classList.add("show");
                        } else {
                            // If no valid results, hide the dropdown
                            resultsDropdown.innerHTML = '<li class="dropdown-item text-muted">No valid results found</li>';
                            resultsDropdown.classList.remove("show");
                        }
                    } else {
                        resultsDropdown.innerHTML = `<li class="dropdown-item disabled">No results found</li>`;
                        resultsDropdown.classList.add("show");
                    }
                }

                searchInput.addEventListener("input", function () {
                    this.value = this.value.toUpperCase();
                    const query = searchInput.value.trim();

                    if (query.length < 1) {
                        resultsDropdown.innerHTML = "";
                        resultsDropdown.classList.remove("show");
                        cachedResults = [];
                        return;
                    }

                    fetchResults(query);
                });

                searchInput.addEventListener("click", function () {
                    const query = searchInput.value.trim();
                    if (query.length > 0) {
                        if (cachedResults.length > 0) {
                            displayResults(cachedResults); // Use cached results if available
                        } else {
                            fetchResults(query); // Fetch if no cached data
                        }
                    }
                });

                document.addEventListener("click", function (event) {
                    if (!searchInput.contains(event.target) && !resultsDropdown.contains(event.target)) {
                        resultsDropdown.classList.remove("show");
                    }
                });
            });

        </script>
        <!-- Before closing body tag -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>